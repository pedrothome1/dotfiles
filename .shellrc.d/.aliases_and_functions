#!/usr/bin/env bash

alias gs="git status"
alias ga='git add'
alias gaa='git add --all'
alias gc='git commit --verbose'
alias gcmsg='git commit --message'
alias gp='git push'
alias gd='git diff'
alias gpsup='git push --set-upstream origin HEAD'
alias gpf='git push --force-with-lease'
alias grst='git restore --staged'
alias grs='git restore'
alias 'gcan!'='git add . && git commit --amend --no-edit'
alias ls='ls --color=auto'
alias la='ls -lAh'
alias ll='ls -lh'
alias lsa='ls -lah'
alias tree='tree -C'
alias grep='grep --color=auto'
alias md='mkdir -p'
alias rd='rmdir'
alias diff='diff --color=auto'
alias less='less -ir'
alias jq='jq -C'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'

alias l &> /dev/null && unalias l
alias rm &> /dev/null && unalias rm

l() {
  if [[ "$#" -eq 1 && -f "$1" ]]; then
    less -r "$1"
    return "$?"
  fi

  ls -lAh "$@"
}

rm() {
  local -a params=("${@}")
  local i

  for (( i = 0; i < "${#params[@]}"; i++ )) do
    if [[ -e "${params[i]}" ]]; then
      break
    fi
  done

  opts=("${params[@]:0:${i}}")

  if (( i < "${#params[@]}" )); then
    files=("${params[@]:${i}}")
  else
    files=()
  fi

  # We move deleted files to trash so they can be easily recovered.
  if [[ ! -d "$HOME/.Trash" ]]; then
    mkdir "$HOME/.Trash"
  fi
  local file
  for file in "${files[@]}"; do
    ( cp -rp "$file" "$HOME/.Trash/" &> /dev/null & )
  done
  wait

  env rm "${opts[@]}" "${files[@]}"
}

gb() {
  # Try to get branch name
  ref="$(git symbolic-ref --short HEAD 2>/dev/null || true)"
  if [[ -n "$ref" ]]; then
    echo "$ref"
  else
    # Try to get tag name (detached HEAD)
    ref="$(git describe --tags --exact-match 2>/dev/null || true)"
    if [[ -n "$ref" ]]; then
      echo "$ref"
    else
      # Get commit hash (detached HEAD)
      echo "$(git rev-parse --short HEAD)"
    fi
  fi
}

dotfiles() {
  if [[ "$#" -eq 0 ]]; then
    echo "usage: dotfiles [push]"
    return 0
  fi

  if [[ "$1" == "push" ]]; then
  (
    cd ~/code/dotfiles

    if [[ $(git status --short) != "" ]]; then
      git add .
      git commit -m "updating dotfiles via dotfiles() shell function"
      git push
    fi
  )
  elif [[ "$1" == "pull" ]]; then
  (
    cd ~/code/dotfiles
    git pull
  )
  elif [[ "$1" == "status" ]]; then
    ( cd ~/code/dotfiles && git status "${@:2}" )
  elif [[ "$1" == "diff" ]]; then
    ( cd ~/code/dotfiles && git diff "${@:2}" )
  elif [[ "$1" =~ ^-?-?(e|edit)$ ]]; then
    ( cd ~/code/dotfiles && vim )

    local rcfile
    if rcfile=.$(basename ${0/#-/})rc; then
      . ~/$rcfile
    fi
  fi
}

is_wsl2() {
  $(uname -r | grep -iq wsl2) || -n "$WSL_DISTRO_NAME"
}

